@using Blazored.Toast.Configuration

@inject IStringLocalizer<Resource> localizer


<nav class="navbar navbar-expand-lg">
    <div class="container">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <a class="navbar-brand">
            <img src="icon/logo black.svg" />
        </a>

        <div class="d-lg-none">
            <CultureSelector></CultureSelector>
        </div>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mx-auto">

                <li class="nav-item">
                    <a class="nav-link" href="/">@localizer["NavHome"]</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="contactus">@localizer["NavContact"]</a>
                </li>

                <li class="nav-item disabled">
                    <a class="nav-link disabled" href="">@localizer["NavAddTask"]</a>
                </li>
                <li class="nav-item">
                    @* <Language></Language> *@
                </li>

            </ul>

            <div class="d-none d-lg-block">
                <CultureSelector></CultureSelector>
            </div>
        </div>



    </div>
</nav>

<BlazoredToasts Position="ToastPosition.TopRight"
                Timeout="10"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-thumbs-up"
                ErrorIcon="fa fa-bug" />

@* @code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
} *@